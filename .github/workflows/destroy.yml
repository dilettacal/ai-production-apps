name: Destroy Applications

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        type: choice
        options:
          - dev
          - test
          - prod
      project:
        description: 'Project to destroy'
        required: true
        default: 'twin'
        type: choice
        options:
          - twin
          - saas
          - instant
      confirm:
        description: 'Type the environment name to confirm destruction'
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  destroy-twin:
    if: github.event.inputs.project == 'twin'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Verify confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "${{ github.event.inputs.environment }}" ]; then
            echo "❌ Confirmation does not match environment name!"
            echo "You entered: '${{ github.event.inputs.confirm }}'"
            echo "Expected: '${{ github.event.inputs.environment }}'"
            exit 1
          fi
          echo "✅ Destruction confirmed for ${{ github.event.inputs.environment }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-actions-twin-destroy
          aws-region: ${{ secrets.DEFAULT_AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Run Destroy Script
        run: |
          export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          export DEFAULT_AWS_REGION=${{ secrets.DEFAULT_AWS_REGION }}
          chmod +x twin/scripts/destroy.sh
          cd twin
          ./scripts/destroy.sh ${{ github.event.inputs.environment }}
        env:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

      - name: Destroy Personal Data S3 Bucket
        run: |
          BUCKET_NAME="twin-data-${{ github.event.inputs.environment }}"
          echo "🗑️  Checking if personal data bucket exists: $BUCKET_NAME"
          
          if aws s3 ls "s3://$BUCKET_NAME" 2>/dev/null; then
            echo "📦 Found personal data bucket: $BUCKET_NAME"
            echo "⚠️  WARNING: This will permanently delete all personal data!"
            echo "🗑️  Deleting bucket contents..."
            
            # Delete all objects in the bucket
            aws s3 rm "s3://$BUCKET_NAME" --recursive
            
            # Delete the bucket
            aws s3api delete-bucket --bucket "$BUCKET_NAME"
            
            echo "✅ Personal data bucket $BUCKET_NAME has been deleted"
          else
            echo "ℹ️  Personal data bucket $BUCKET_NAME does not exist (nothing to delete)"
          fi

      - name: Destruction Complete
        run: |
          echo "✅ Twin Environment ${{ github.event.inputs.environment }} has been destroyed!"
          echo "✅ Personal data S3 bucket has been cleaned up!"

  destroy-saas:
    if: github.event.inputs.project == 'saas'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Verify confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "${{ github.event.inputs.environment }}" ]; then
            echo "❌ Confirmation does not match environment name!"
            exit 1
          fi
          echo "✅ Destruction confirmed for ${{ github.event.inputs.environment }}"

      - name: Destroy SaaS
        run: |
          echo "🚀 Destroying SaaS ${{ github.event.inputs.environment }}"
          # Add your SaaS destruction logic here
          echo "✅ SaaS destruction would happen here"

  destroy-instant:
    if: github.event.inputs.project == 'instant'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Verify confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "${{ github.event.inputs.environment }}" ]; then
            echo "❌ Confirmation does not match environment name!"
            exit 1
          fi
          echo "✅ Destruction confirmed for ${{ github.event.inputs.environment }}"

      - name: Destroy Instant
        run: |
          echo "🚀 Destroying Instant ${{ github.event.inputs.environment }}"
          # Add your Instant destruction logic here
          echo "✅ Instant destruction would happen here"
